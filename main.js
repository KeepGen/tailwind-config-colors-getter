import figmaConfig from './tailwind.config.js'
console.log(`%c==ORIG [ File ]:`, 'color:#FFFFFF; border-radius:4px; background:#253031; padding:4px 8px;', figmaConfig);

let finalResult = {}
let finalArray = []

const colors = figmaConfig.theme.colors
console.log(`%c==ORIG [ Colors OBJ ]:`, 'color: #FFFFFF; border-radius:4px; background: #253031; padding: 4px 8px;', colors);

Object.entries(colors).forEach(([name, color], k) => {
   // üü©DONE ‚Äî 01. –†–∞–∑–±–∏—Ç—å "NAME" –ø–æ —Ç–∏—Ä–µ –∏ –ø–æ–ª—É—á–∏—Ç—å –º–∞—Å—Å–∏–≤ –∑–Ω–∞—á–µ–Ω–∏–π
   const nameArr = name.split('-')
   // console.log(`%cResult ${nameArr.length}:`, 'color: #453643; border-radius:4px; background: #E3E3E3; padding: 4px 8px;', nameArr);

   // üü©DONE ‚Äî 02. –ü–µ—Ä–µ–∑–∞–ø–∏—Å–∞—Ç—å –≤ –º–∞—Å—Å–∏–≤ —Ç–æ–ª—å–∫–æ —Ç–µ –∑–Ω–∞—á–µ–Ω–∏—è, –∫–æ—Ç–æ—Ä—ã–µ –ù–ï –∏—Å–ø–æ–ª—å–∑—É—é—Ç "TAILWIND" –∏ "BASE"
   if(nameArr.includes('tailwind') || nameArr.includes('base')) {
      return
   } else {
      nameArr.join()
   }

   // üü©DONE ‚Äî 03. –£–¥–∞–ª–∏—Ç—å –∏–∑ –º–∞—Å—Å–∏–≤–∞ –ø–µ—Ä–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ "–º—É—Å–æ—Ä–Ω—ã–π" –ø—Ä–µ—Ñ–∏–∫—Å (–Ω–∞–ø—Ä–∏–º–µ—Ä "AAA")
   // üü©DONE ‚Äî 04. –£–¥–∞–ª–∏—Ç—å –∏–∑ –º–∞—Å—Å–∏–≤–∞ –∑–Ω–∞—á–µ–Ω–∏—è –≥–¥–µ –≤—Å—Ç—Ä–µ—á–∞–µ—Ç—Å—è "EXTRAS" –∏ —Ä–∞–∑–¥–µ–ª–∏—Ç—å "‚Ä¢"
   const clearResults = nameArr.filter(clearUnused)
   function clearUnused(el) {
      if(el !== 'aaa' && el !== 'extras' && el !== '‚Ä¢') {
         return el
      }
   }

   // üü©DONE ‚Äî 05. –ù–∞–π—Ç–∏ –≤ –º–∞—Å—Å–∏–≤–µ —Ç–µ –∑–Ω–∞—á–µ–Ω–∏—è, –≥–¥–µ –ø–æ—Å–ª–µ–¥–Ω–∏–π —ç–ª–µ–º–µ–Ω—Ç = "DEFAULT"
   // üü©DONE ‚Äî 06. –°–æ–∑–¥–∞—Ç—å —É—Å–ª–æ–≤–∏–µ –ø—Ä–∏ –∫–æ—Ç–æ—Ä–æ–º –º–∞—Å—Å–∏–≤—ã —Å–æ–¥–µ—Ä–∂–∞—â–∏–µ (–Ω–∞–π–¥–µ–Ω—ã–µ) "DEFAULT" –∑–∞–ø–∏—Å–∞—Ç—å –≤ –Ω–æ–≤—ã–π –º–∞—Å—Å–∏–≤ —Å –∫–ª—é—á–æ–º "DEFAULT" –∏ –∑–Ω–∞—á–µ–Ω–∏–µ–º "HEX –∫–æ–¥"
   // üü©DONE ‚Äî 07. –î–ª—è –æ—Å—Ç–∞–ª—å–Ω—ã—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤ ‚Äì —É–±—Ä–∞—Ç—å –≤–∞—Ä–∏–∞–Ω—Ç (–Ω–∞–ø—Ä–∏–º–µ—Ä "500"), –æ—Å—Ç–∞–≤—à–∏–µ—Å—è –∑–Ω–∞—á–µ–Ω–∏—è —Å–∫–æ–Ω–∫–∞—Ç–∏–Ω–∏—Ä–æ–≤–∞—Ç—å –≤ –æ–¥–Ω–æ –Ω–∞–∑–≤–∞–Ω–∏–µ —á–µ—Ä–µ–∑ –¥–µ—Ñ–∏—Å
   // üü©DONE ‚Äî 08. –û–±—ä–µ–¥–µ–Ω—ë–Ω–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –∫–∞–∫ –Ω–∞–∑–≤–∞–Ω–∏–µ –Ω–æ–≤–æ–≥–æ –æ–±—ä–µ–∫—Ç–∞, –≤ –∫–æ—Ç–æ—Ä—ã–π –Ω–∞–¥–æ –¥–æ–±–∞–≤–∏—Ç—å –∑–Ω–∞—á–µ–Ω–∏—è (–Ω–∞–ø—Ä–∏–º–µ—Ä "–∏–º—è": "HEX –∫–æ–¥")
   // üü©DONE ‚Äî 09. –ï—Å–ª–∏ –∏–º—è —Å–æ—Å—Ç–æ–∏—Ç –∏–∑ –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤ (–≤ –º–∞—Å—Å–∏–≤–µ), –∏—Ö –Ω—É–∂–Ω–æ –æ–±—ä–µ–¥–∏–Ω–∏—Ç—å
   if(clearResults[clearResults.length -1] === 'default') {
      const lastElDefault = clearResults[clearResults.length -1]
      const beforeDefault = clearResults[clearResults.length -2]
      clearResults.pop()
      clearResults.pop()
      mergeResult(clearResults.join("-"), lastElDefault, color)
      mergeResult(clearResults.join("-"), beforeDefault, color)
   } else {
      const lastElDefault = clearResults[clearResults.length -1]
      clearResults.pop()
      mergeResult(clearResults.join("-"), lastElDefault, color)
   }
})

// üü•–ü–æ–ª—É—á–µ–Ω–Ω—ã–π —ç–ª–µ–º–µ–Ω—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∫–∞–∫ –Ω–∞–∑–≤–∞–Ω–∏–µ –æ–±—ä–µ–∫—Ç–∞ –∏ –æ–±—ä–µ–¥–∏–Ω–∏—Ç—å –≤ –º–∞—Å—Å–∏–≤ –ø–∞–ª–µ—Ç–æ–∫ —Å —Ü–≤–µ—Ç–∞–º–∏
// üü•–≠–ª–µ–º–µ–Ω—Ç eg. "500" –¥–æ–±–∞–≤–∏—Ç—å –≤ –æ–±—ä–µ–∫—Ç –∫–∞–∫ –∫–ª—é—á
// üü•–≠–ª–µ–º–µ–Ω—Ç "COLOR" (HEX —Ü–≤–µ—Ç) –¥–æ–±–∞–≤–∏—Ç—å –≤ –æ–±—ä–µ–∫—Ç –∫–∞–∫ –∑–Ω–∞—á–µ–Ω–∏–µ –≤ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–∏ —Å –∫–ª—é—á–æ–º
// üü•–ö–∞–∂–¥—ã–π –æ–±—ä–µ–∫—Ç —Å –≥—Ä–∞–¥–∞—Ü–∏–µ–π –ø–æ —Ü–≤–µ—Ç–∞–º –æ–±—ä–µ–¥–∏–Ω–∏—Ç—å –≤ –æ–¥–∏–Ω –æ–±—â–∏–π –æ–±—ä–µ–∫—Ç
function mergeResult(objName, key, value) {
   console.log(objName, key, value)
   finalResult = {
      [objName]: {
         [key]: value
      }
   }
   finalArray.push(finalResult)
}

console.log('= = = = = = = = = = = = = = = = = = = = = = = = = = = = ');
console.log(`%cFinal [ OBJ ]:`, 'color: #FFFFFF; border-radius:4px; background: #2978A0; padding: 4px 8px;', finalResult);
console.log(`%cFinal [ ARR ]:`, 'color: #000000; border-radius:4px; background: #7CB518; padding: 4px 8px;', finalArray);
